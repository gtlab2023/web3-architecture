/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BankSol, BankSolInterface } from "../BankSol";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "interest",
        type: "uint256",
      },
    ],
    name: "InterestCalculated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "interest",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
    payable: true,
  },
  {
    inputs: [],
    name: "ANNUAL_INTEREST_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "MAX_WITHDRAWAL_PERCENTAGE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "SECONDS_PER_YEAR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastInterestCalculation",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    stateMutability: "payable",
    type: "receive",
    payable: true,
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "calculateInterest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "pure",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "getContractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTotalBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506107ff8061001f6000396000f3fe6080604052600436106100955760003560e01c8063d3d3819311610059578063d3d38193146101a6578063e11932cf146101c6578063e6a69ab8146101e6578063fa3c3092146101fe578063fc7e286d14610213576100e7565b80632e1a7d4d1461012f5780636f9fb98a14610151578063853828b614610173578063b678339314610188578063d0e30db01461019e576100e7565b366100e75760405162461bcd60e51b815260206004820152601c60248201527f557365206465706f736974282920746f206465706f736974204554480000000060448201526064015b60405180910390fd5b60405162461bcd60e51b815260206004820152601760248201527f46756e6374696f6e20646f6573206e6f7420657869737400000000000000000060448201526064016100de565b34801561013b57600080fd5b5061014f61014a36600461070b565b61026a565b005b34801561015d57600080fd5b50475b6040519081526020015b60405180910390f35b34801561017f57600080fd5b5061014f61048d565b34801561019457600080fd5b506101606101f481565b61014f6104e3565b3480156101b257600080fd5b506101606101c1366004610724565b610612565b3480156101d257600080fd5b506101606101e1366004610724565b610646565b3480156101f257600080fd5b506101606301e1338081565b34801561020a57600080fd5b50610160603281565b34801561021f57600080fd5b5061024f61022e366004610724565b60006020819052908152604090208054600182015460029092015490919083565b6040805193845260208401929092529082015260600161016a565b33600090815260208190526040902080548211156102c15760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016100de565b600082116103225760405162461bcd60e51b815260206004820152602860248201527f5769746864726177616c20616d6f756e74206d75737420626520677265617465604482015267072207468616e20360c41b60648201526084016100de565b600061032d33610646565b90506000818360000154610341919061076a565b90506000606461035260328461077d565b61035c9190610794565b9050808511156103ae5760405162461bcd60e51b815260206004820181905260248201527f45786365656473206d6178696d756d207769746864726177616c206c696d697460448201526064016100de565b6103b885836107b6565b8455426002850155604051600090339087908381818185875af1925050503d8060008114610402576040519150601f19603f3d011682016040523d82523d6000602084013e610407565b606091505b505090508061044a5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064016100de565b604080518781526020810186905233917fdf273cb619d95419a9cd0ec88123a0538c85064229baa6363788f743fff90deb910160405180910390a2505050505050565b60405162461bcd60e51b815260206004820152602560248201527f46756e6374696f6e2064697361626c656420746f2070726576656e742062616e6044820152643590393ab760d91b60648201526084016100de565b600034116105415760405162461bcd60e51b815260206004820152602560248201527f4465706f73697420616d6f756e74206d75737420626520677265617465722074604482015264068616e20360dc1b60648201526084016100de565b3360009081526020819052604090208054156105b457600061056233610646565b905080826000016000828254610578919061076a565b909155505060405181815233907f3aff28a570e0ff120bf92f84de651faa874ba2dd7268ad0fc5a68107492729799060200160405180910390a2505b348160000160008282546105c8919061076a565b90915550504260018201819055600282015560405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a250565b600061061d82610646565b6001600160a01b038316600090815260208190526040902054610640919061076a565b92915050565b6001600160a01b03811660009081526020819052604081208054820361066f5750600092915050565b80600201544210156106b75760405162461bcd60e51b81526020600482015260116024820152700496e76616c69642074696d657374616d7607c1b60448201526064016100de565b60008160020154426106c991906107b6565b905060006106dd6301e1338061271061077d565b835483906106ee906101f49061077d565b6106f8919061077d565b6107029190610794565b95945050505050565b60006020828403121561071d57600080fd5b5035919050565b60006020828403121561073657600080fd5b81356001600160a01b038116811461074d57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561064057610640610754565b808202811582820484141761064057610640610754565b6000826107b157634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156106405761064061075456fea2646970667358221220922dc2e03be16499335b88c42dc3fe3808349269a91e4367b009b2c407cb8f2964736f6c634300081a0033";

type BankSolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BankSolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BankSol__factory extends ContractFactory {
  constructor(...args: BankSolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<BankSol> {
    return super.deploy(overrides || {}) as Promise<BankSol>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BankSol {
    return super.attach(address) as BankSol;
  }
  override connect(signer: Signer): BankSol__factory {
    return super.connect(signer) as BankSol__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BankSolInterface {
    return new utils.Interface(_abi) as BankSolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BankSol {
    return new Contract(address, _abi, signerOrProvider) as BankSol;
  }
}
